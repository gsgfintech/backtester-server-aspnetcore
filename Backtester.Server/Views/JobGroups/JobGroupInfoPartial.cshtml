@model Backtester.Server.Models.BacktestJobGroupModel

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Job @Html.DisplayFor(m => Model.GroupId)</h4>
    </div>
    <div class="table-responsive">
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(m => Model.GroupId)</th>
                <td>@Html.DisplayFor(m => Model.GroupId)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Status)</th>
                <td>
                    @Html.DisplayFor(m => Model.Status)
                    @if (Model.Progress.HasValue)
                    {
                        <span>(@Html.DisplayFor(m => Model.Progress))</span>
                    }
                </td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.CreateTime)</th>
                <td>@Html.DisplayFor(m => Model.CreateTime)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.ActualStartTime)</th>
                <td>@Html.DisplayFor(m => Model.ActualStartTime)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.CompletionTime)</th>
                <td>@Html.DisplayFor(m => Model.CompletionTime)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Duration)</th>
                <td>@Html.DisplayFor(m => Model.Duration)</td>
            </tr>
        </table>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Timeframe</h4>
    </div>
    <div class="table-responsive">
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(m => Model.StartDate)</th>
                <td>@Html.DisplayFor(m => Model.StartDate)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.EndDate)</th>
                <td>@Html.DisplayFor(m => Model.EndDate)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.StartTime)</th>
                <td>@Html.DisplayFor(m => Model.StartTime)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.EndTime)</th>
                <td>@Html.DisplayFor(m => Model.EndTime)</td>
            </tr>
        </table>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Strategy</h4>
    </div>
    <div class="table-responsive">
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Strategy.Name)</th>
                <td>@Html.DisplayFor(m => Model.Strategy.Name)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Strategy.Version)</th>
                <td>@Html.DisplayFor(m => Model.Strategy.Version)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Strategy.DllPath)</th>
                <td>@Html.DisplayFor(m => Model.Strategy.DllPath)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Strategy.StrategyTypeName)</th>
                <td>@Html.DisplayFor(m => Model.Strategy.StrategyTypeName)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Strategy.AlgoTypeName)</th>
                <td>@Html.DisplayFor(m => Model.Strategy.AlgoTypeName)</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(m => Model.Strategy.Crosses)</th>
                <td>@Html.DisplayFor(m => Model.Strategy.Crosses)</td>
            </tr>
            <tr>
                <th colspan="2">Parameters</th>
            </tr>
            @foreach (var parameter in Model.Strategy.Parameters)
            {
                <tr>
                    <th>@Html.DisplayFor(m => parameter.Name)</th>
                    <td>@Html.DisplayFor(m => parameter.Value)</td>
                </tr>
            }
        </table>
    </div>
</div>
